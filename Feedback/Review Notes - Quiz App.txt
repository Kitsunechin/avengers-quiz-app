Hi Martyna,

Thanks for submitting your app for review. You've done great work and I commend your efforts!

Overall, I have recommended that your app be approved.

I've included detailed feedback and suggestions below, along with screenshots, which I hope will be helpful. 

Your screenshots and a downloadable version of this feedback are available at https://www.dropbox.com/sh/drxyijc07mzjlnx/AABBsWIJOhRJL-uFp6_mFOJZa?dl=0. Please download them within one week, as I may remove them after that time.

If you'd like to discuss anything in more detail, you're welcome to get in touch with me via email at jharris@thinkful.com, or on Slack at @joshua_harris.

Kind regards,
Joshua Harris, *Grader*

---

# User flow
## Rate the user flow of the app on a scale from 1-5 (5 being the highest)

4

- Although the user flow is correct, there is an uncaught error in the console when clicking the Submit button without selecting an answer. (2)

# User feedback
## Rate the user feedback within the app on a scale from 1-5 (5 being the highest)

5

# Design
## Rate the design of the app on a scale from 1-5 (5 being the highest)

4

- There are some rendering issues with the radio buttons wrapping and stacking on narrow screens. (1)

# Accessibility
## Rate the app's adherence to a11y best practices on a scale from 1-5 (5 being the highest)

3

- Nice use of `role` attributes.
- No `aria-live` tags are present. Recommend implementing `aria-live` tags.
  - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions
  - http://heydonworks.com/practical_aria_examples/
-  You have some validation errors in your markup. I recommend running your rendered code through the [W3C HTML Validator](https://validator.w3.org). Warnings are OK, but errors should be resolved. (See screenshots 3, 4). To do this:

1. Visit your page and open up the Elements tab of your Chrome Developer Tools.
2. Right click the `<html>` element and select `Copy > Copy outerHTML`.
3. Paste the results into https://validator.w3.org/#validate_by_input.

# Rendering a form
## Rate the app's form rendering on a scale from 1-5 (5 being the highest)

4

- Nice use of fieldset and legend tags.
- There are some validation errors in how you are using `label`. See above note on W3C validator.

# JS architecture
## Rate the student's JS code on a scale from 1-5 (5 being the highest)

- It's good practice to have as few global variables as possible. Recommend implementing a global namespace variable to hold all your application configuration rather than storing in individual variables, i.e.:

```
const MyApplication = {
  apiKeyOne: '1',
  apiKeyTwo: '2',
  // ...
}
```

- Recommend indenting your JS code consistently, indenting by one level when opening a block with `{`, `(`, or ``` and closing on the same indentation level that the block was opened on. For instance:

```
for (let i = 0; i < data.length; i++) {
  $(".results").append(`
    <div>
      <a href="https://www.themealdb.com/api/json/v1/1/lookup.php?i=${ data[i].idMeal }"></a>
      <h2>${data[i].strMeal}</h2>
      <h3>Category: ${ data[i].strCategory }</h3>
      <img src="${ data[i].strMealThumb }" class="mealImage" />
    </div>
  `);
}
```